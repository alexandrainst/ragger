[tool.poetry]
name = "ragger"
description = "A repository for general-purpose RAG applications."
version = "2.0.0"
authors = [
    "Dan Saattrup Nielsen <dan.nielsen@alexandra.dk>",
    "Anders Jess Pedersen <anders.j.pedersen@alexandra.dk>",
]
readme = "README.md"
license = "Proprietary"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
numpy = ">=1.26.4"
python-dotenv = ">=1.0.1"
pydantic = ">=2.9.2"
click = ">=8.1.7"
pyyaml = ">=6.0.2"
tiktoken = { version = ">=0.8.0", optional = true }
openai = { version = ">=1.52.2", optional = true }
vllm = { version = ">=0.5.5", optional = true, markers = "sys_platform != 'darwin' and extra != 'cpu'" }
torch = [
    { version = ">=2.4.0", optional = true, source = "pypi", markers = "sys_platform == 'darwin' or extra != 'cpu'" },
    { version = ">=2.4.0", optional = true, source = "torch_cpu", markers = "sys_platform != 'darwin' and extra == 'cpu'" },
]
psycopg2-binary = { version = ">=2.9.10", optional = true }
sentence_transformers = { version = ">=3.2.1", optional = true }
gradio = { version = ">=5.4.0", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = ">=8.3.3"
pytest-cov = ">=5.0.0"
pre-commit = ">=4.0.1"
readme-coverage-badger = ">=0.1.1"
ruff = ">=0.7.1"
mypy = ">=1.13.0"
nbstripout = ">=0.7.1"

[tool.poetry.extras]
default = [
    "openai",
    "tiktoken",
]
postgres = [
    "psycopg2-binary",
]
vllm = [
    "vllm",
]
e5 = [
    "sentence-transformers",
]
cpu = [
    "torch",
]
demo = [
    "gradio",
]
all = [
    "openai",
    "tiktoken",
    "torch",
    "vllm",
    "psycopg2-binary",
    "sentence-transformers",
    "gradio",
]

[[tool.poetry.source]]
name = "pypi"

[[tool.poetry.source]]
name = "torch_cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.poetry.scripts]
ragger-demo = "ragger.cli:run_demo"
ragger-compile = "ragger.cli:compile"

[tool.ruff]
target-version = "py311"
line-length = 88
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "tutorial.ipynb",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
skip-magic-trailing-comma = true

[tool.ruff.lint]
extend-select = [
    "I",
    "D",
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = [
    "F401",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    '--durations=10',
    '--color=yes',
    '--doctest-modules',
    '--cov=src/ragger',
]
xfail_strict = true
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::ImportWarning",
    "ignore::ResourceWarning",
    "ignore::FutureWarning",
]
log_cli_level = "info"
testpaths = [
    "tests",
    "src/ragger",
]

[build-system]
requires = [
    "poetry-core>=1.0.0"
]
build-backend = "poetry.core.masonry.api"
