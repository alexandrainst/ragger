FROM nvidia/cuda:12.2.0-base-ubuntu22.04

# Install dependencies
RUN apt-get -y update && \
    apt-get -y upgrade && \
    apt-get install -y gcc python3.11 python3-pip python3-dev openssh-client && \
    python3 -m pip install --upgrade pip wheel && \
    mkdir -p -m 0600 ~/.ssh && \
    ssh-keyscan github.com >> ~/.ssh/known_hosts && \
    apt-get clean

# Install Ragger
# NOTE: Change the `default` extra to the extras you need for your RAG project.
RUN --mount=type=ssh python3 -m pip install "ragger[default,demo] @ git+ssh://git@github.com/alexandrainst/ragger.git@staging"

ARG config
ENV config=$config

# Inform the user if no config is provided
RUN if [ -z "$config" ]; then \
        echo "No config provided. This means that the RAG system will need to be compiled when running the container, including the download of any potential models. If this is not what you wanted, then please build the image with '--build-arg config=path/to/json/or/yaml/file' set."; \
    fi

# Compile the Ragger library
RUN ragger-compile --config-file $config

# Run the Ragger demo
CMD GRADIO_SERVER_NAME="0.0.0.0" ragger-demo --config-file $config
